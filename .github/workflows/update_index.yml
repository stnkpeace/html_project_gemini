name: Update HTML via ChatGPT

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Modification prompt for ChatGPT'
        required: true
        default: 'Beautify and fix the header menu order in index.html'
      file_path:
        description: 'Path to the file to update'
        required: true
        default: 'index.html'

jobs:
  modify-html:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Call ChatGPT (OpenAI API) with prompt
        id: chatgpt
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Calling ChatGPT to modify the file..."

          FILE_CONTENT=$(cat "${{ github.event.inputs.file_path }}")
          USER_PROMPT="${{ github.event.inputs.prompt }}"

          REQUEST_BODY=$(printf '{
            "model": "gpt-4o",
            "messages": [
              {"role": "system", "content": "You are an expert HTML developer."},
              {"role": "user", "content": "Modify the following HTML content according to this prompt: %s\n\nHere is the original HTML:\n%s"}
            ],
            "temperature": 0.7,
            "max_tokens": 3000
          }' "$(echo "$USER_PROMPT" | sed 's/"/\\"/g')" "$(echo "$FILE_CONTENT" | sed 's/"/\\"/g')")

          RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$REQUEST_BODY")

          HTTP_STATUS=$(echo "$RESPONSE" | grep HTTP_STATUS | awk -F ':' '{print $2}' | tr -d ' ')
          BODY=$(echo "$RESPONSE" | sed '/HTTP_STATUS:/d')

          echo "Status code: $HTTP_STATUS"
          echo "Raw response:"
          echo "$BODY"

          if [[ "$HTTP_STATUS" != "200" ]]; then
            echo "❌ Error from OpenAI API"
            exit 1
          fi

          MODIFIED_HTML=$(echo "$BODY" | jq -r '.choices[0].message.content')

          if [ -z "$MODIFIED_HTML" ] || [ "$MODIFIED_HTML" == "null" ]; then
            echo "❌ ChatGPT did not return usable HTML"
            exit 2
          fi

          echo "$MODIFIED_HTML" > "${{ github.event.inputs.file_path }}"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ github.event.inputs.file_path }}"
          git commit -m "Updated ${ { github.event.inputs.file_path } } via ChatGPT: ${{ github.event.inputs.prompt }}" || echo "No changes to commit"
          git push
